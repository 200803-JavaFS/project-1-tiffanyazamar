# initialize root logger with level ERROR for stdout and fout
log4j.rootLogger=INFO,stdout,FILE
# set the log level for these components
log4j.logger.com.endeca=INFO
log4j.logger.com.endeca.itl.web.metrics=INFO

# add a ConsoleAppender to the logger stdout to write to the console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
# use a simple message format
log4j.appender.stdout.layout.ConversionPattern=%m%n

## add a FileAppender to the logger fout
#log4j.appender.fout=org.apache.log4j.FileAppender
## create a log file
#log4j.appender.fout.File=//Users//daitran//git//project-1-tiffanyazamar//crawl.log
#log4j.appender.fout.layout=org.apache.log4j.PatternLayout
## use a more detailed message pattern
#log4j.appender.fout.layout.ConversionPattern=%p\t%d{ISO8601}\t%r\t%c\t[%t]\t%m%n

   # Define the file appender
   log4j.appender.FILE=org.apache.log4j.FileAppender
      # Set the name of the file
   log4j.appender.FILE.File=src/main/resources/log.out

   # Set the immediate flush to true (default)
   log4j.appender.FILE.ImmediateFlush=true

   # Set the threshold to debug mode
   log4j.appender.FILE.Threshold=debug

   # Set the append to false, overwrite
   log4j.appender.FILE.Append=false

   # Define the layout for file appender
   log4j.appender.FILE.layout=org.apache.log4j.PatternLayout
   log4j.appender.FILE.layout.conversionPattern=%d %m%n